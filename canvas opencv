import cv2 as cv
import numpy as np
from keras.models import load_model

t_new = load_model('mnist1.h5')

img=np.zeros((400,400),dtype='uint8')
wname='canvas'
cv.namedWindow(wname)

drawing =False

(ix,iy)=(-1,-1)

def shape(event,x,y,flags,param):

    global  ix , iy , drawing

    if event==cv.EVENT_LBUTTONDOWN:
        drawing = True
        #(ix,iy) = x , y

    elif event==cv.EVENT_MOUSEMOVE:
        if drawing == True:
            cv.circle(img,(x,y),5,(255,255,255),-1)

    elif event == cv.EVENT_LBUTTONUP:
        drawing = False
        cv.circle(img,(x,y),5,(255,255,255),-1)

cv.setMouseCallback(wname,shape)

while True:
    cv.imshow(wname,img)
    if cv.waitKey(1) == ord('q'):
        break
    elif cv.waitKey(1)== ord('r'):
        img[:,:]=0
_,img=cv.threshold(img,127,255,cv.THRESH_BINARY)
gblur=cv.GaussianBlur(img,(5,5),0)
gblur=cv.resize(gblur,(28,28)).reshape(1,28,28)

y_predict=np.argmax(t_new.predict(gblur), axis=-1)
print(y_predict)
